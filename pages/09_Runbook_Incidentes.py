import streamlit as st

st.title("9) Runbook e incidentes")
st.markdown("""
Un **Runbook** define acciones autom√°ticas o manuales para responder a incidentes.
Aqu√≠ puedes simular un incidente para ver c√≥mo reaccionar√≠a el sistema,
por ejemplo, activando una **alerta global** y proponiendo una acci√≥n de mitigaci√≥n.
""")

# --- Acciones definidas en el runbook ---
st.subheader("Acciones predefinidas")
st.markdown("""
- **Degradaci√≥n autom√°tica**: si la latencia `p95` supera el umbral durante 3 d√≠as, el sistema pasa a usar un modelo de IA m√°s peque√±o, activa el truncado de contexto y una cach√© m√°s agresiva.
- **Bloqueo de salida por calidad**: si la m√©trica `EEE` de un informe es inferior al umbral definido en el SLA (p.ej., 2.5), la salida se bloquea y se requiere revisi√≥n humana obligatoria.
- **Fallo de fuente de datos**: si una fuente clave (p.ej., base de datos privada) falla, se reintenta la conexi√≥n. Si persiste, se notifica al equipo de operaciones y se marcan las conclusiones del informe como "limitadas por falta de acceso a fuente X".
""")

# --- Simulador de incidentes ---
st.subheader("Simulador de Incidentes")
escenario = st.selectbox("Simular incidente", ["Ninguno","Latencia p95 fuera de rango","EEE bajo umbral","Fallo de fuente privada"])

# Limpiar la alerta si se selecciona "Ninguno"
if escenario == "Ninguno":
    if "global_alert" in st.session_state:
        st.session_state["global_alert"] = None
    st.success("Operaci√≥n normal. No hay alertas activas.")
else:
    if st.button(f"Activar simulaci√≥n de '{escenario}'"):
        if escenario == "Latencia p95 fuera de rango":
            st.session_state["global_alert"] = {
                "message": "Latencia p95 fuera de rango. Degradaci√≥n autom√°tica activada.",
                "type": "warning",
                "icon": "‚è±Ô∏è"
            }
            st.warning("Acci√≥n recomendada: Activar degradaci√≥n, notificar a ingenier√≠a y revisar prompts recientes.")
        elif escenario == "EEE bajo umbral":
            st.session_state["global_alert"] = {
                "message": "Calidad EEE por debajo del umbral. Salida bloqueada.",
                "type": "error",
                "icon": "‚ùó"
            }
            st.error("Acci√≥n recomendada: Bloquear la publicaci√≥n del informe y asignarlo a un experto para revisi√≥n manual.")
        elif escenario == "Fallo de fuente privada":
            st.session_state["global_alert"] = {
                "message": "Fallo de conexi√≥n con fuente 'priv_db'. Usando fallback a fuentes p√∫blicas.",
                "type": "warning",
                "icon": "üì¶"
            }
            st.info("Acci√≥n recomendada: Marcar conclusiones como limitadas en el informe y registrar el fallo de la fuente en el log de auditor√≠a.")

        st.success(f"Alerta global activada para '{escenario}'. Navega a otras p√°ginas para ver el banner.")
        st.info("üí° Vuelve a seleccionar 'Ninguno' para desactivar la alerta.")

